{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"\ud83d\udcda My Study Notes","text":"<p>Welcome to my personal knowledge base. This site contains organized notes, diagrams, and code snippets on topics I'm currently studying.</p>"},{"location":"#topics-covered","title":"\ud83d\ude80 Topics Covered","text":"<ul> <li>Computer Science Fundamentals</li> <li>Operating Systems</li> <li>Networking</li> <li>Databases</li> <li> <p>Data Structures &amp; Algorithms</p> </li> <li> <p>Software Engineering</p> </li> <li>System Design</li> <li>Design Patterns</li> <li> <p>Coding Best Practices</p> </li> <li> <p>Programming Languages</p> </li> <li>Go</li> <li>TypeScript / Node.js</li> <li> <p>Python (for tooling)</p> </li> <li> <p>Tools &amp; Ecosystem</p> </li> <li>Git &amp; GitHub</li> <li>CLI Tools</li> <li>DevOps Basics</li> </ul>"},{"location":"#how-to-use-this-site","title":"\ud83d\udd27 How to Use This Site","text":"<ul> <li>Use the sidebar navigation to browse topics.</li> <li>Each section contains Markdown notes, images, and code.</li> <li>Content is always a work in progress \u2014 I update it regularly.</li> </ul>"},{"location":"#tip","title":"\ud83d\udca1 Tip","text":"<p>If you're viewing this on GitHub Pages, feel free to explore the full source code here.</p>"},{"location":"tips-and-snippets/","title":"Tips &amp; Snippets","text":"Tool/Topic Command/Code Example Description Jenkins Credential Decrypt <code>println hudson.util.Secret.decrypt(\"{secret}\")</code> Decrypts Jenkins credentials."},{"location":"principles/solid/","title":"SOLID","text":"<p>The SOLID principles are five key design principles in object-oriented programming (OOP), introduced by Robert C. Martin (Uncle Bob). These principles help make software more maintainable, scalable, testable, and easier to understand.</p>"},{"location":"principles/solid/#what-does-solid-stand-for","title":"\ud83e\uddf1 What does SOLID stand for?","text":"Principle Meaning S Single Responsibility Principle (SRP) O Open/Closed Principle (OCP) L Liskov Substitution Principle (LSP) I Interface Segregation Principle (ISP) D Dependency Inversion Principle (DIP)"},{"location":"principles/solid/#summary","title":"\ud83d\udca1 Summary","text":"Principle Goal SRP One responsibility per class OCP Extend without modifying LSP Safe substitutions ISP Split big interfaces DIP Depend on abstractions"}]}